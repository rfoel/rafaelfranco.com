service: rfoel-dev

frameworkVersion: '3'

plugins:
  - serverless-esbuild
  - serverless-s3-sync

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'

package:
  individually: true

custom:
  host: rfoel.dev

  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    sourcesContent: false
    exclude: ['aws-sdk']
    target: 'node16'
    define:
      'require.resolve': null
    platform: 'node'
  s3Sync:
    buckets:
      - bucketNameKey: WebsiteBucketName
        bucketPrefix: website/
        localDir: public
        params:
          - favicon.png:
              CacheControl: 'public, max-age=3600'
          - 'static/**/*':
              CacheControl: 'public, max-age=31536000, immutable'

functions:
  remix:
    handler: server/index.handler
    events:
      - httpApi:
          method: any
          path: '/{proxy+}'

resources:
  Resources:
    HttpApi:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: HttpApi-${self:service}
        ProtocolType: HTTP

    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties: {}

    WebsiteOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: Origin Access Identity to Access ${self:service} Website Bucket

    WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref WebsiteBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - /
                  - - Fn::GetAtt:
                        - WebsiteBucket
                        - Arn
                    - '*'
              Principal:
                CanonicalUser:
                  Fn::GetAtt:
                    - WebsiteOriginAccessIdentity
                    - S3CanonicalUserId

    RemixCachePolicy:
      Type: AWS::CloudFront::CachePolicy
      Properties:
        CachePolicyConfig:
          Name: RemixCachePolicy-${self:service}
          DefaultTTL: 60
          MinTTL: 0
          MaxTTL: 60
          ParametersInCacheKeyAndForwardedToOrigin:
            HeadersConfig:
              HeaderBehavior: none
            EnableAcceptEncodingGzip: true
            QueryStringsConfig:
              QueryStringBehavior: all
            CookiesConfig:
              CookieBehavior: all

    CDN:
      Type: AWS::CloudFront::Distribution
      DependsOn:
        - WebsiteBucket
        - HttpApi
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.host}
          Origins:
            - DomainName:
                Fn::GetAtt:
                  - WebsiteBucket
                  - RegionalDomainName
              Id: StaticOrigin
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - /
                    - - origin-access-identity
                      - cloudfront
                      - !Ref WebsiteOriginAccessIdentity
              OriginPath: '/website'
            - DomainName:
                Fn::Join:
                  - ''
                  - - Ref: HttpApi
                    - '.execute-api.${self:provider.region}.amazonaws.com'
              Id: RemixOrigin

              OriginCustomHeaders:
                - HeaderName: X-Forwarded-Host
                  HeaderValue: ${self:custom.host}
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
                OriginSSLProtocols: [TLSv1.2]

          CustomErrorResponses:
            - ErrorCachingMinTTL: 60
              ErrorCode: 403
              ResponseCode: 404
              ResponsePagePath: /404

          DefaultCacheBehavior:
            AllowedMethods: [GET, HEAD, OPTIONS, PUT, PATCH, POST, DELETE]
            CachedMethods: [GET, HEAD, OPTIONS]
            Compress: true
            CachePolicyId:
              Ref: RemixCachePolicy
            TargetOriginId: RemixOrigin
            ViewerProtocolPolicy: redirect-to-https

          CacheBehaviors:
            - PathPattern: 'static/*'
              AllowedMethods:
                - GET
                - HEAD
              CachedMethods:
                - GET
                - HEAD
              Compress: true
              ForwardedValues:
                QueryString: true
                Cookies:
                  Forward: none
              TargetOriginId: StaticOrigin
              ViewerProtocolPolicy: redirect-to-https

            - PathPattern: '/favicon*'
              AllowedMethods:
                - GET
                - HEAD
              CachedMethods:
                - GET
                - HEAD
              Compress: false
              ForwardedValues:
                QueryString: true
                Cookies:
                  Forward: none
              TargetOriginId: StaticOrigin
              ViewerProtocolPolicy: redirect-to-https

          Comment: ${self:service}
          Enabled: true
          HttpVersion: http2
          PriceClass: PriceClass_All
          ViewerCertificate:
            AcmCertificateArn: ${ssm:/acmCertificateArn}
            SslSupportMethod: sni-only

  Outputs:
    WebsiteBucketName:
      Value:
        Ref: WebsiteBucket
    DistributionID:
      Value:
        Ref: CDN
    WebsiteDomain:
      Value:
        Fn::GetAtt: [CDN, DomainName]
